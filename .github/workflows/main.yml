name: A workflow for my Hello World file
on : 
  workflow_dispatch :
    inputs:
      regions:
        description: 'Azure regions'     
        required: true
        default: "scus,eus"
      apps:
        description: 'Application names'     
        required: true
        default: "csm,pub"
jobs:
  build:
    strategy:
      matrix:
        region_matrix: ['scus','eus']
        app_matrix: ['csm','pub']
      fail-fast: false
    name: Hello world action
    runs-on: ubuntu-latest
    steps:
      - id: matrix-status
        name: matrix status
        run: |
          echo "${{ matrix.app_matrix }}_${{matrix.region_matrix}}=failure" > ${{ github.run_id }}_${{ matrix.app_matrix }}_${{matrix.region_matrix}}.txt
      - id: upload-error-file
        name: capture failure app and region names
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.run_id }}_${{ matrix.app_matrix }}_${{matrix.region_matrix}}
          path: ${{ github.run_id }}_${{ matrix.app_matrix }}_${{matrix.region_matrix}}.txt
  report:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:  
      - uses: actions/download-artifact@v3
        with:
          path: path/to/artifact
      - name: Display structure of downloaded files
        run: ls -R 
        working-directory: path/to/artifact
      - name: process files for notification
        working-directory: path/to/artifact
        shell: pwsh
        run: |
          $EmailTitle = "Failure Deploying following apps at [$(Get-Date -Format 'MM/dd/yyy')]"
          $EmailHtml = '<html><body>'
          $EmailHtml += '<p>Below is the list of Applications and Regions where deployment failed</p>'
          $EmailHtml += '<p><table>'
          $EmailHtml += '<th>Application Name</th><th>Region</th>'
          $Files = Get-ChildItem
          foreach($file in $Files){
              $appname = $file.name.split('_')[1]
              $region = $file.name.split('_')[-1]
              $EmailHtml += "<tr><td>" + $appname + "</td><td>" + $region + "</td><td>"
          }
          
          $EmailHtml += '</table></p>'
          $EmailHtml += '</body>'
          $EmailHtml += '</html>'

          $securekey = ConvertTo-SecureString -AsPlainText -String $env:MAIL_PASSWORD -Force
          $creds = New-Object System.Management.Automation.PSCredential ($env:MAIL_USERNAME, $securekey) 
          
          Write-Output "Sending email.."
          Send-MailMessage -Subject $EmailTitle -Body $EmailHtml -BodyAsHtml -From "no-reply@dev.arcgis.com" -To "yghia@esri.com" -SmtpServer email-smtp.us-east-1.amazonaws.com -Credential $creds -UseSsl -Port 587 
          Write-Output "Email sent"
